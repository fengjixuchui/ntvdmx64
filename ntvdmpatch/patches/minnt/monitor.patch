--- NT4\private\mvdm\bde\bdeutil.c
+++ nt\private\mvdm\bde\bdeutil.c
39c39
< #ifndef i386
---
> #if !defined(i386) || !defined(MONITOR)
--- NT4\private\mvdm\dbg\dbg.c
+++ nt\private\mvdm\dbg\dbg.c
38c38
< #ifdef i386
---
> #ifdef MONITOR
--- NT4\private\mvdm\vdmdbg\common.h
+++ nt\private\mvdm\vdmdbg\common.h
201c201
< #ifndef i386
---
> #ifndef MONITOR
370c370
< #ifndef _X86_
---
> #ifndef MONITOR
--- NT4\private\mvdm\vdmdbg\util.c
+++ nt\private\mvdm\vdmdbg\util.c
132c132
< #ifndef i386
---
> #ifndef MONITOR
481c481
< #ifndef i386
---
> #ifndef MONITOR
--- NT4\private\mvdm\vdmdbg\vdmdbg.c
+++ nt\private\mvdm\vdmdbg\vdmdbg.c
141c141
< #ifdef _X86_
---
> #ifdef MONITOR
165c165
< #ifdef _X86_
---
> #ifdef MONITOR
342c342
< #ifdef _X86_
---
> #ifdef MONITOR
434c434
< #ifdef i386
---
> #ifdef MONITOR
514c514
< #ifdef _X86_
---
> #ifdef MONITOR
592a593,609
> #ifndef MONITOR
>         case DBG_SINGLESTEP:
>         case DBG_GPFAULT:
>         case DBG_STACKFAULT:
>         /* Unfortunately, newer dbgeng.dll versions have a bad habit of showing the
>          * interactive debugger prompt only on non-X86 Windows Versions. On X86
>          * versions, exceptions are passed on to the system debugger. Now this 
>          * is correct, if we assume that NTVDM runs in Monitor and memory is mapped
>          * 1:1 to process address space, but it doesn't work so well on our emulated
>          * non-Monitor builds. Therefore we are using a trick:
>          * We are overwriting the mode with a bogus value which makes VDMEvent switch()
>          * table to not execute the code.
>          * Additionally, we set EventFlags to VDMEVENT_NEEDS_INTERACTIVE in order to
>          * let the debugger execute the interactive prompt like it should
>          */
>          lpdw[0] = MAKELONG(-1, HIWORD(lpdw[0]) | VDMEVENT_NEEDS_INTERACTIVE);
> #endif
--- NT4\private\mvdm\inc\softpc.h
+++ nt\private\mvdm\inc\softpc.h
229c229
< #ifdef i386
---
> #ifdef MONITOR
257,258d255
< #define DECLARE_LocalVdmContext VDM_TIB * _LocalVdmTib = (VDM_TIB *)(NtCurrentTeb()->Vdm); \
<                                 CONTEXT * _LocalVdmContext = &(*_LocalVdmTib).VdmContext

--- NT4\private\mvdm\inc\wow.h
+++ nt\private\mvdm\inc\wow.h
29c29
< #ifdef i386
---
> #ifdef MONITOR
--- NT4\private\mvdm\softpc.new\host\src\config.c
+++ nt\private\mvdm\softpc.new\host\src\config.c
575c575
< #ifdef i386
---
> #ifdef MONITOR
579c579
<          vdmMemorySize = 16L * 1024L
---
>          vdmMemorySize = 16L * 1024L;
--- NT4\private\mvdm\softpc.new\host\src\nt_msscs.c
+++ nt\private\mvdm\softpc.new\host\src\nt_msscs.c
131c131
< #ifndef i386
---
> #if !defined(i386) || !defined(MONITOR)
--- NT4\private\mvdm\xms.486\xms.c
+++ nt\private\mvdm\xms.486\xms.c
47c47
< #ifndef i386
---
> #ifndef MONITOR
67c67
< #ifndef i386
---
> #ifndef MONITOR
--- NT4\private\mvdm\vdmexts\misc.c
+++ nt\private\mvdm\vdmexts\misc.c
573c573
< #ifndef i386
---
> #ifndef MONITOR
710c710
< #ifndef i386
---
> #ifndef MONITOR
--- NT4\private\mvdm\vdmexts\util.c
+++ nt\private\mvdm\vdmexts\util.c
53c53
< #ifndef i386
---
> #ifndef MONITOR
137c137
< #ifndef i386    //
---
> #ifndef MONITOR    //
285c285
< #ifndef i386
---
> #ifndef MONITOR
--- NT4\private\mvdm\vdmexts\vdmexts.h
+++ nt\private\mvdm\vdmexts\vdmexts.h
313c313
< #ifndef i386
---
> #ifndef MONITOR
--- NT4\private\mvdm\vdmexts\debug.c
+++ nt\private\mvdm\vdmexts\debug.c
151c151
< #ifndef i386
---
> #ifndef MONITOR
197c197
< #ifndef i386
---
> #ifndef MONITOR
375c375
< #ifdef _X86_
---
> #ifdef MONITOR
--- NT4\private\mvdm\xms.486\xms.h
+++ nt\private\mvdm\xms.486\xms.h
60c60
< #ifndef i386
---
> #ifndef MONITOR
149c149
< #ifndef i386
---
> #ifndef MONITOR
--- NT4\private\mvdm\xms.486\xmsblock.c
+++ nt\private\mvdm\xms.486\xmsblock.c
200c200
< #ifdef i386
---
> #ifdef MONITOR
--- NT4\private\..\public\sdk\inc\nt_vdd.h
+++ nt\private\..\public\sdk\inc\nt_vdd.h
267c267
< #ifdef _X86_
---
> #if defined(_X86_) && defined(MONITOR)
--- NT4\private\mvdm\softpc.new\host\src\nt_fulsc.c
+++ nt\private\mvdm\softpc.new\host\src\nt_fulsc.c
2019a2020
> 	ResetEvent(hErrorHardwareEvent);
2030d2030
<     ResetEvent(hErrorHardwareEvent);
2280c2280
<     #ifdef i386
---
>     #if defined(i386) && defined(X86GFX)
3372a3373
> #ifdef X86GFX
3378a3380
> #endif
--- NT4\private\mvdm\softpc.new\host\src\nt_det.c
+++ nt\private\mvdm\softpc.new\host\src\nt_det.c
255c255
< 
---
>     ResetEvent(hErrorHardwareEvent);
260d259
<     ResetEvent(hErrorHardwareEvent);
--- NT4\private\mvdm\softpc.new\base\keymouse\mouse_io.c
+++ nt\private\mvdm\softpc.new\base\keymouse\mouse_io.c
1797a1798
> #ifdef X86GFX
1820a1822
> #endif
--- NT4\private\mvdm\softpc.new\host\src\nt_bop.c
+++ nt\private\mvdm\softpc.new\host\src\nt_bop.c
754a755
> #ifdef X86GFX
762a764
> #endif
--- NT4\private\mvdm\v86\monitor\x86\monitor.c
+++ nt\private\mvdm\v86\monitor\x86\monitor.c
106a107
> #ifdef X86GFX 
110a112
> #endif
1597a1600
> #ifdef X86GFX
1631a1635
> #endif
--- NT4\private\mvdm\softpc.new\base\video\video.c
+++ nt\private\mvdm\softpc.new\base\video\video.c
4729c4729
<     #ifndef i386   // !!! remeber to change DISP_WIN.SYS since it relies on this.
---
>     #ifndef X86GFX   // !!! remeber to change DISP_WIN.SYS since it relies on this.
--- NT4\private\mvdm\softpc.new\host\src\nt_sb.c
+++ nt\private\mvdm\softpc.new\host\src\nt_sb.c
300a301
> #ifdef MONITOR
304a306
> #endif
352a355
> #ifdef MONITOR
356a360
> #endif
--- NT4\private\mvdm\softpc.new\host\src\nt_sbfm.c
+++ nt\private\mvdm\softpc.new\host\src\nt_sbfm.c
diff -r F:\Windows.Source.Code.w2k.nt4.wxp\minnt\q160765803-minint4-85fac4faadc7\base\mvdm\softpc.new\host\src\nt_sbfm.c Z:\tmp\nt_sbfm.c
282a283
> #ifdef MONITOR
322a324,339
> #else
>     DWORD dwBytesReturned;
>     LPVOID lpMsgBuf;
> 
>     // attempt to open device file adlib.mid or adlib.mid0
>     HFM = CreateFile("\\\\.\\adlib.mid", GENERIC_READ | GENERIC_WRITE,
>       FILE_SHARE_WRITE, NULL, OPEN_EXISTING, 0, NULL);
>     if (HFM == INVALID_HANDLE_VALUE) {
>         HFM = CreateFile("\\\\.\\adlib.mid0", GENERIC_READ | GENERIC_WRITE,
>           FILE_SHARE_WRITE, NULL, OPEN_EXISTING, 0, NULL);
>     }
>     if (HFM == INVALID_HANDLE_VALUE) {
> 		HFM = NULL;
> 		return FALSE;
>     }
> #endif
353a371,373
> #ifndef MONITOR
> 		CloseHandle(HFM);
> #endif
356a377
> #ifdef MONITOR
362a384
> #endif
--- NT4\private\mvdm\softpc.new\host\inc\nt_reset.h
+++ nt\private\mvdm\softpc.new\host\inc\nt_reset.h
19a20
> #ifdef X86GFX
27c28,32
< 
---
> #else
> #define CheckScreenSwitchRequest(handle)
> #define EnableScreenSwitch(OnlyFullScreenMode, handle)
> #define DisableScreenSwitch(handle)
> #endif
--- NT4\private\mvdm\softpc.new\host\src\nt_thred.c
+++ nt\private\mvdm\softpc.new\host\src\nt_thred.c
40a41,61
> /*
>  * leecher1337:
>  * Hack for x64 kernel that doesn't initialize the TIB struct
>  * in CreateProcess.
>  * In WX86, this seems to get filled in BaseCreateWx86Tib, but
>  * where the heck is it filled on MONITOR builds..?
>  *
>  */
> void host_InitializeTib(void)
> {
> #if defined(W10) && !defined(WX86) && !defined(MONITOR)
>     PVDM_TIB Tib = (PVDM_TIB)calloc(sizeof(VDM_TIB), 1);
>     extern PFAMILY_TABLE  *pgDpmVdmFamTbls;
>     NtCurrentTeb()->Vdm = Tib;
>     Tib->Size = sizeof(VDM_TIB);
>     Tib->pDpmFamTbls = pgDpmVdmFamTbls;
> #endif
> }
> 
> 		
> 
127a149,151
> #ifdef W10
>        host_InitializeTib();
> #endif
--- NT4\private\mvdm\softpc.new\obj.vdm\ntvdm.c
+++ nt\private\mvdm\softpc.new\obj.vdm\ntvdm.c
242a243
> #ifndef W10
249a251,254
> #else
> 	void host_InitializeTib(void);
> 	host_InitializeTib();
> #endif
